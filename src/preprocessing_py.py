# -*- coding: utf-8 -*-
"""Preprocessing.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1my8tWuZrXzEYS307WbzeIYqAwzquX5nB
"""

from google.colab import drive
drive.mount('/content/drive')

# preprocessing.py
import pandas as pd

# 1. Load Datasets
flights = pd.read_csv("/content/drive/MyDrive/Masai /MASAI-PROJECTS/flights.csv")
airlines = pd.read_csv("/content/drive/MyDrive/Masai /MASAI-PROJECTS/airlines.csv")
airports = pd.read_csv("/content/drive/MyDrive/Masai /MASAI-PROJECTS/airports.csv")


# 2. Merge Airline Names
flights = flights.merge(airlines, left_on="AIRLINE", right_on="IATA_CODE", how="left")
flights.rename(columns={"AIRLINE": "AIRLINE_CODE", "AIRLINE_y": "Airline_Name"}, inplace=True)

# 3. Merge Airport Info
flights = flights.merge(airports, left_on="ORIGIN_AIRPORT", right_on="IATA_CODE", how="left", suffixes=("", "_ORIGIN"))
flights = flights.merge(airports, left_on="DESTINATION_AIRPORT", right_on="IATA_CODE", how="left", suffixes=("", "_DEST"))

# 4. Create Target Variable
flights['Delayed'] = (flights['ARRIVAL_DELAY'] > 15).astype(int)

# 5. Feature Engineering
flights['FL_DATE'] = pd.to_datetime(dict(year=flights.YEAR, month=flights.MONTH, day=flights.DAY))
flights['DayOfWeek'] = flights['DAY_OF_WEEK']
flights['Hour'] = (flights['SCHEDULED_DEPARTURE'] // 100).astype(int)

# Reduce high-cardinality airports â†’ top 20, rest as OTHER
top_origins = flights['ORIGIN_AIRPORT'].value_counts().nlargest(20).index
top_dests = flights['DESTINATION_AIRPORT'].value_counts().nlargest(20).index
flights['ORIGIN_AIRPORT'] = flights['ORIGIN_AIRPORT'].where(flights['ORIGIN_AIRPORT'].isin(top_origins), 'OTHER')
flights['DESTINATION_AIRPORT'] = flights['DESTINATION_AIRPORT'].where(flights['DESTINATION_AIRPORT'].isin(top_dests), 'OTHER')

# 6. One-hot encode categorical features
categorical = ['AIRLINE_x', 'ORIGIN_AIRPORT', 'DESTINATION_AIRPORT']
flights = pd.get_dummies(flights, columns=categorical, drop_first=True)


# 7. Drop irrelevant columns
flights.drop(['YEAR','MONTH','DAY','DAY_OF_WEEK','SCHEDULED_DEPARTURE','FL_DATE','AIRLINE_NAME'], axis=1, inplace=True, errors='ignore')

# 8. Save cleaned data
file_path = "/content/drive/MyDrive/Masai/MASAI-PROJECTS/flights_cleaned_sample.csv"
flights.to_csv(file_path, index=False)
print("File saved successfully!")